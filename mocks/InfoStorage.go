// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import (
	api "github.com/fridrock/avito-shop/api"
	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// InfoStorage is an autogenerated mock type for the InfoStorage type
type InfoStorage struct {
	mock.Mock
}

// GetInfoResponse provides a mock function with given fields: _a0
func (_m *InfoStorage) GetInfoResponse(_a0 uuid.UUID) (api.InfoResponse, error) {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetInfoResponse")
	}

	var r0 api.InfoResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(uuid.UUID) (api.InfoResponse, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(uuid.UUID) api.InfoResponse); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(api.InfoResponse)
	}

	if rf, ok := ret.Get(1).(func(uuid.UUID) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewInfoStorage creates a new instance of InfoStorage. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewInfoStorage(t interface {
	mock.TestingT
	Cleanup(func())
}) *InfoStorage {
	mock := &InfoStorage{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
