// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import (
	sql "database/sql"

	mock "github.com/stretchr/testify/mock"
)

// ScanFunction is an autogenerated mock type for the ScanFunction type
type ScanFunction[T interface{}] struct {
	mock.Mock
}

// Execute provides a mock function with given fields: rows, dto
func (_m *ScanFunction[T]) Execute(rows *sql.Rows, dto *T) error {
	ret := _m.Called(rows, dto)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*sql.Rows, *T) error); ok {
		r0 = rf(rows, dto)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewScanFunction creates a new instance of ScanFunction. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewScanFunction[T interface{}](t interface {
	mock.TestingT
	Cleanup(func())
}) *ScanFunction[T] {
	mock := &ScanFunction[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
